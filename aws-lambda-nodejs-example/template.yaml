AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-lambda-nodejs-example

  Sample SAM Template for aws-lambda-nodejs-example
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        TABLE_NAME: 'books-table'

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler 
      Runtime: nodejs14.x
      AutoPublishAlias: live
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            
  QuotesScraperFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      CodeUri: quotes-scraper/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Events:
        QuotesScraper:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /quotes
            Method: get         

  CreateBookFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      CodeUri: book-service/
      Handler: app.create
      Runtime: nodejs14.x
      Events:
        CreateBook:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /book
            Method: POST

  GetAllBooksFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      CodeUri: book-service/
      Handler: app.getAll
      Runtime: nodejs14.x
      Events:
        GetAllBooks:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /books
            Method: get

  GetBookFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      CodeUri: book-service/
      Handler: app.get
      Runtime: nodejs14.x
      Events:
        GetBook:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /books/{id}
            Method: get

  UpdateBookFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      CodeUri: book-service/
      Handler: app.update
      Runtime: nodejs14.x
      Events:
        UpdateBook:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /books/{id}
            Method: PUT

  DeleteBookFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      CodeUri: book-service/
      Handler: app.delete
      Runtime: nodejs14.x
      Events:
        DeleteBook:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /books/{id}
            Method: DELETE                              

Policies:
  - DynamoDBCrudPolicy:
      TableName: !Ref MyTable            

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn

  QuotesScraperApi:
    Description: "API Gateway endpoint URL for Prod stage for Quotes Scraper function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/quotes/"
  QuotesScraperFunction:
    Description: "Quotes Scraper Function ARN"
    Value: !GetAtt QuotesScraperFunction.Arn
  QuotesScraperFunctionIamRole:
    Description: "Implicit IAM Role created for Quotes Scraper function"
    Value: !GetAtt QuotesScraperFunctionRole.Arn  
